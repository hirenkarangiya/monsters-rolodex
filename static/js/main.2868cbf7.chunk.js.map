{"version":3,"sources":["components/Card/Card.components.jsx","components/CardList/CardList.components.jsx","components/SearchBox/SearchBox.component.jsx","components/Footer/Footer.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","name","email","id","address","className","src","alt","street","suite","city","zipcode","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","Footer","Date","getFullYear","App","state","appname","isLoading","searchString","this","setState","fetch","then","response","json","filteredMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAoBeA,MAjBf,YAA4B,IAAZC,EAAW,EAAXA,QAEJC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,GAAIC,EAAWJ,EAAXI,QAEzB,OACI,sBAAKC,UAAU,gBAAf,UACI,qBAAKC,IAAG,iCAA4BH,EAA5B,0BAAwDI,IAAKN,IACrE,oBAAII,UAAU,OAAd,SAAsBJ,IACtB,mBAAGI,UAAU,QAAb,SAAsBH,IACtB,oCACI,iCAAOE,EAAQI,OAAf,IAAwBJ,EAAQK,SAChC,iCAAOL,EAAQM,KAAf,KAAuBN,EAAQO,kBCDhCC,MARf,YAAiC,IAAbC,EAAY,EAAZA,SAChB,OACI,qBAAKR,UAAU,WAAf,SACMQ,EAAWA,EAASC,KAAI,SAACd,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,OAA6B,M,MCLpF,SAASY,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC7C,OACI,mCACE,uBAAOZ,UAAU,eAAea,KAAK,SAASF,YAAaA,EAAaG,SAAWF,M,MCH9E,SAASG,IACpB,OACI,wBAAQf,UAAU,SAAlB,SACI,sCAAU,kCAAU,IAAIgB,MAAOC,gBAA/B,gD,ICmDGC,E,kDAhDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,QAAS,mBACTZ,SAAU,GACVa,WAAW,EACXC,aAAc,IAPJ,E,qDAWd,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CAAEH,WAAW,IAC3BI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OACJ,EAAKH,SAAS,CAAEhB,SAAUmB,EAAUN,WAAW,S,oBAIrD,WAAU,IAAD,OACP,EAA8CE,KAAKJ,MAA3CE,EAAR,EAAQA,UAAWb,EAAnB,EAAmBA,SAAUc,EAA7B,EAA6BA,aAEvBO,EAAkBrB,EAASsB,QAC/B,SAAAnC,GAAO,OAAIA,EAAQC,KAAKmC,cAAcC,SAASV,EAAaS,kBAG9D,OACE,qCACA,sBAAK/B,UAAU,gBAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BuB,KAAKJ,MAAMC,UAEpCC,EAAY,oBAAIrB,UAAU,eAAd,wBAEV,qCACE,cAACU,EAAD,CAAWC,YAAY,kBAAkBC,aAAe,SAAAqB,GAAC,OAAI,EAAKT,SAAS,CAAEF,aAAcW,EAAEC,OAAOC,WAEpG,cAAC,EAAD,CAAU3B,SAAUqB,UAK5B,cAACd,EAAD,W,GA3CYqB,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2868cbf7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.style.scss';\r\n\r\nfunction Card({ monster }) {\r\n\r\n    const { name, email, id, address} = monster;\r\n\r\n    return (\r\n        <div className=\"CardList_item\">\r\n            <img src={`https://robohash.org/10${id}?set=set2&size=180x180`} alt={name} />\r\n            <h3 className=\"name\">{name}</h3>\r\n            <p className=\"email\">{email}</p>\r\n            <address>\r\n                <span>{address.street} {address.suite}</span>\r\n                <span>{address.city}, {address.zipcode}</span>\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './CardList.style.scss';\r\nimport Card from '../Card/Card.components';\r\n\r\nfunction CardList({ monsters }) {\r\n    return (\r\n        <div className=\"CardList\">\r\n            { monsters ? monsters.map((monster) => <Card key={monster.id} monster={monster} />)  : \"\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport './SearchBox.style.scss';\r\n\r\nexport default function SearchBox({ placeholder, handleChange}) {\r\n    return (\r\n        <>\r\n          <input className=\"search-input\" type=\"search\" placeholder={placeholder} onChange={ handleChange } />  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Footer.style.scss';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p>&copy; <strong>{(new Date().getFullYear())}</strong>, All Right Reserved to Monsters Rolodex</p>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport CardList from './components/CardList/CardList.components';\nimport SearchBox from './components/SearchBox/SearchBox.component';\nimport Footer from './components/Footer/Footer.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      appname: \"Monsters Rolodex\",\n      monsters: [],\n      isLoading: false,\n      searchString: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((response) =>\n        this.setState({ monsters: response, isLoading: false })\n      );\n  }\n\n  render() {\n    const { isLoading, monsters, searchString } = this.state;\n\n    const filteredMonster = monsters.filter( \n      monster => monster.name.toLowerCase().includes(searchString.toLowerCase())\n    );\n\n    return (\n      <>\n      <div className=\"App-container\">\n        <h1 className=\"App-title\">{this.state.appname}</h1>\n        {\n          isLoading ? <h2 className=\"loading-text\">Loading...</h2>\n          : \n            <>\n              <SearchBox placeholder=\"Search Monsters\" handleChange={ e => this.setState({ searchString: e.target.value }) }/>\n              \n              <CardList monsters={filteredMonster} />\n\n            </>\n        }\n      </div>\n      <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}